{"version":3,"sources":["../src/index.js"],"names":["GET_OWN_SYMBOLS_AVAILABLE","Object","getOwnPropertySymbols","KNOWN_STATICS","name","length","prototype","caller","arguments","arity","hoistStatics","target","source","getOwnPropertyNames","concat","filter","key","reduce","assign","parseInjectionMap","map","args","keys","apply","inject","injectionMap","InjectDecoratedClass","depMap","instance","create","wrappedClass","parsedArguments","Array","call","slice","withDependencies","WrappedClass"],"mappings":"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","file":"index.js","sourcesContent":["const GET_OWN_SYMBOLS_AVAILABLE = typeof Object.getOwnPropertySymbols === 'function';\n\nconst KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  arguments: true,\n  arity: true\n};\n\nconst hoistStatics = (target, source) => Object\n  .getOwnPropertyNames(source)\n  .concat(GET_OWN_SYMBOLS_AVAILABLE ? Object.getOwnPropertySymbols(source) : [])\n  .filter((key) => !KNOWN_STATICS[key])\n  .reduce((target, key) => Object.assign(target, {\n    [key]: source[key]\n  }), target);\n\nexport const parseInjectionMap = (map, args = []) => Object\n  .keys(map)\n  .reduce((map, key) => Object.assign(\n    map, {\n      [key]: typeof map[key] === 'function' ? map[key].apply(null, args) : map[key]\n    }\n  ), map);\n\nexport const inject = (injectionMap = {}) => WrappedClass => {\n  class InjectDecoratedClass {\n    constructor () {\n      const depMap = parseInjectionMap(InjectDecoratedClass.injectionMap, arguments);\n      const instance = Object.create(InjectDecoratedClass.wrappedClass.prototype);\n      const parsedArguments = Array.prototype.concat.call([depMap], Array.prototype.slice.call(arguments));\n      InjectDecoratedClass.wrappedClass.apply(instance, parsedArguments);\n      return instance;\n    }\n  }\n\n  InjectDecoratedClass.withDependencies = function () {\n    const args = Array.prototype.slice.call(arguments, 1) || [];\n    const depMap = parseInjectionMap(arguments[0], args);\n    const instance = Object.create(InjectDecoratedClass.wrappedClass.prototype);\n    const parsedArguments = Array.prototype.concat.call([depMap], Array.prototype.slice.call(args));\n    InjectDecoratedClass.wrappedClass.apply(instance, parsedArguments);\n    return instance;\n  };\n\n  InjectDecoratedClass.injectionMap = injectionMap;\n  InjectDecoratedClass.wrappedClass = WrappedClass;\n\n  return hoistStatics(InjectDecoratedClass, WrappedClass);\n}\n"]}